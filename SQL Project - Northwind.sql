use Northwind

SELECT [OrderDate]
FROM [dbo].[Orders]
ORDER BY [OrderDate] DESC

-- 1. Order Analysis by Year and Month
--	 o Calculate the total number of orders and total revenue for each month in each year.


SELECT MONTH(O.[OrderDate]) AS OrderMonth, YEAR(O.[OrderDate]) AS OrderYear,
	   SUM(OD.[OrderID]) AS NumofOrders, SUM(OD.[UnitPrice]*OD.[Quantity]) AS TotalRevenue
FROM [dbo].[Order Details] AS OD
JOIN [dbo].[Orders] AS O ON OD.[OrderID] = O.[OrderID]
GROUP BY MONTH(O.[OrderDate]), YEAR(O.[OrderDate])


--2. Active Customer Analysis
--   o Extract the names of customers who placed more than 10 orders in the past year, sorted by the number of orders in descending order.
SELECT C.[CompanyName], COUNT(O.[OrderID]) AS Order_Count
FROM [dbo].[Customers] C
JOIN [dbo].[Orders] O ON C.[CustomerID]=O.[CustomerID]
WHERE YEAR(O.[OrderDate]) = 1997
-- WHERE O.[OrderDate] >= DATEADD(YEAR, -1, GETDATE())
GROUP BY [CompanyName]
HAVING COUNT(O.[OrderID]) > 10
ORDER BY Order_Count DESC

-- 3. Low Stock Analysis
--    o Identify products with available stock (UnitsInStock) below the average reorder level (ReorderLevel) across all products.
SELECT [ProductName], [UnitsInStock] AS AvailableStock
FROM [dbo].[Products]
WHERE [UnitsInStock] < (SELECT AVG([ReorderLevel]) FROM [dbo].[Products])



-- 4. Supplier Analysis by Location
--    o Fetch a list of suppliers along with the number of products each supplies, sorted by geographical location.
SELECT S.[CompanyName], COUNT(P.[ProductID]) AS ProductCount, S.[Country], S.[Region], S.[City]
FROM [dbo].[Suppliers] S
JOIN [dbo].[Products] P ON S.[SupplierID] = P.[SupplierID]
GROUP BY S.[CompanyName], S.[Country], S.[Region], S.[City]
--HAVING COUNT(P.[ProductID])
ORDER BY S.[Country], S.[Region], S.[City]


--5. Shipping Delays
--   o Retrieve orders that were delayed in shipping by more than 5 days from the order date, displaying the name of the shipping company (ShipperName).
SELECT O.[OrderID], SH.[CompanyName]
FROM [dbo].[Orders] AS O
JOIN [dbo].[Shippers] AS SH ON O.[ShipVia] = SH.[ShipperID]
WHERE ([ShippedDate] - [OrderDate]) > 5

SELECT [ShipVia] FROM [dbo].[Orders]

SELECT [ShipperID] FROM [dbo].[Shippers]

-- 6. Profitability by Category
--	o Calculate the average profitability (selling price - purchase cost) for each product category (CategoryName)
-- المفروض سعر المنتج في جدول الطلبات يكون أعلى من سعره في جدول المنتجات
SELECT C.[CategoryName], AVG(P.[UnitPrice] - OD.[UnitPrice]) AS AvgProfit
FROM [dbo].[Products] P
JOIN [dbo].[Categories] C ON P.[CategoryID] = C.[CategoryID]
JOIN [dbo].[Order Details] OD ON P.[ProductID] = OD.[ProductID]
GROUP BY [CategoryName]

SELECT P.[ProductID], P.[UnitPrice] AS UnitPrice, O.[UnitPrice] AS UnitCost
FROM [dbo].[Order Details] AS O
JOIN [dbo].[Products] AS P ON O.[ProductID] = P.[ProductID]


-- 7. Top Customers
--	o Extract a list of the top 5 customers by total sales, including their names and sales value.
SELECT TOP(5) C.[CompanyName], SUM(OD.[UnitPrice]*OD.[Quantity]) AS TotalSales
FROM [dbo].[Customers] AS C
JOIN [dbo].[Orders] AS O ON C.[CustomerID] = O.[CustomerID]
JOIN [dbo].[Order Details] AS OD ON O.[OrderID] = OD.[OrderID]
GROUP BY C.[CompanyName]
ORDER BY TotalSales DESC

SELECT [QuantityPerUnit]
FROM [dbo].[Products]


--8. Discount Analysis
--	o Identify the percentage of discounts given in orders for each customer and display those who received an average discount greater than 10%.
SELECT O.[CustomerID], AVG(OD.[Discount]*100) AS AvgDiscount
FROM [dbo].[Order Details] AS OD
JOIN [dbo].[Orders] AS O ON OD.[OrderID] = O.[OrderID]
GROUP BY O.[CustomerID]
HAVING AVG(OD.[Discount]*100) > 10

SELECT [Discount]
FROM [dbo].[Order Details]


--9. Order Revenue by Employee
--	o Calculate the total revenue generated by each employee based on the orders they handled.
SELECT (E.[FirstName]+' '+E.[LastName]) AS EmpName ,SUM(OD.[UnitPrice]*OD.[Quantity]) AS OrderAmount
FROM [dbo].[Employees] AS E
JOIN [dbo].[Orders] AS O ON E.[EmployeeID] = O.[EmployeeID]
JOIN [dbo].[Order Details] AS OD ON O.[OrderID] = OD.[OrderID]
GROUP BY E.[FirstName]+' '+E.[LastName]

SELECT *
FROM [dbo].[Employees]


--10. Best-Selling Products
--	o Extract the names of the top 5 best-selling products and the quantity sold for each.
SELECT TOP(5) P.[ProductName], SUM(OD.[Quantity]) AS TotalQuantity
FROM [dbo].[Products] AS P
JOIN [dbo].[Order Details] AS OD ON P.[ProductID] = OD.[ProductID]
GROUP BY P.[ProductName]
ORDER BY TotalQuantity DESC


-- Here the top 5 are according reordering times
SELECT TOP(5) P.[ProductName], SUM(OD.[Quantity]) AS TotalQuantity, P.[ReorderLevel]
FROM [dbo].[Products] AS P
JOIN [dbo].[Order Details] AS OD ON P.[ProductID] = OD.[ProductID]
GROUP BY P.[ProductName], P.[ReorderLevel]
ORDER BY P.[ReorderLevel] DESC, TotalQuantity DESC


SELECT [ProductID], [ProductName], [ReorderLevel]
FROM [dbo].[Products]


SELECT [UnitsOnOrder]
FROM [dbo].[Products]


--11. Unshipped Orders
--	o Retrieve orders that have not been shipped yet, displaying the customer's name and the order date.
SELECT O.[OrderID], C.[CompanyName], O.[OrderDate]
FROM [dbo].[Orders] AS O
JOIN [dbo].[Customers] AS C ON O.[CustomerID] = C.[CustomerID]
WHERE [ShippedDate] IS NULL


--12. Sales by Region
--	o Calculate the total sales for each city within each country.
SELECT O.[ShipCity], O.[ShipCountry], SUM(OD.[UnitPrice]*OD.[Quantity]) AS TotalSales
FROM [dbo].[Orders] AS O
JOIN [dbo].[Order Details] AS OD ON O.[OrderID] = OD.[OrderID]
GROUP BY O.[ShipCity], O.[ShipCountry]


--13. Subqueries for Supplier Analysis
--	o Identify suppliers offering products sold at prices higher than the average product price in the database.
SELECT S.[CompanyName], P.[ProductName], P.[UnitPrice]
FROM [dbo].[Suppliers] AS S
JOIN [dbo].[Products] AS P ON S.[SupplierID] = P.[SupplierID]
WHERE P.[UnitPrice] > (SELECT AVG([UnitPrice]) FROM [dbo].[Products]);


--14. Unsold Products
--	o List the names of products that have never been sold in any order.
SELECT P.[ProductName]
FROM [dbo].[Products] AS P
LEFT OUTER JOIN [dbo].[Order Details] AS OD ON P.[ProductID] = OD.[ProductID]
WHERE OD.[OrderID] IS NULL


SELECT *
FROM [dbo].[Products]


--15. Orders by Product Category
--	o Calculate the number of orders and total revenue for each product category (CategoryName), sorted by revenue in descending order.
SELECT C.[CategoryName], SUM(OD.[OrderID]) AS NumofOrders, SUM(OD.[UnitPrice]*OD.[Quantity]) AS TotalRevenue
FROM [dbo].[Categories] AS C
JOIN [dbo].[Products] AS P ON C.[CategoryID] = P.[CategoryID]
JOIN [dbo].[Order Details] AS OD ON P.[ProductID] = OD.[ProductID]
GROUP BY C.[CategoryName]
ORDER BY TotalRevenue DESC


SELECT *
FROM [dbo].[Order Details]